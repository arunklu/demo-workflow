name: Build Frontend Service
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: chkout
        uses: actions/checkout@v2
      - uses:  hashicorp/setup-terraform@v2
      - name: Initialize env
        run: |
          cd infrastructure/modules/sns
          bash aws.sh
          terraform init
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1
      - name: plan
        run : |
          cd infrastructure/modules/sns
          terraform plan

        









  # steps:
  #     - nam: Checkout
  #       uses: actions/checkout@v2
  #      - name: Build Frontend Docker image
  #        run: |
  #          cd front-end
  #          docker build -t arunr039/front-end:${{github.run_number}} .
  #      - name: Login to Docker hub and push
  #        run: |
  #          echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
  #          docker push arunr039/front-end:${{github.run_number}}
  #      - name: Build Backend Service
  #        run: |
  #          cd back-end
  #          docker build -t arunr039/back-end:${{github.run_number}} .
  #      - name: Login and Push backned Image
  #        run: |
  #          echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
  #          docker push arunr039/back-end:${{github.run_number}}
    #  - name: Import Database
    #    run: |
    #      MYSQL_PASSWORD=${{ secrets.DB_USERNAME }} 
    #      MYSQL_HOST=${{ secrets.DB_HOST }}
    #      mysql -h deliveryguru.cvsned4gvlis.ap-south-1.rds.amazonaws.com -u ${{ secrets.DB_USERNAME }} -p"$MYSQL_PASSWORD"  ${{ secrets.DATABASE}} < ./database/delivery.sql
      
